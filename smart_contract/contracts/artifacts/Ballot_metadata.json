{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_voterAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_pollingStationID",
						"type": "uint256"
					}
				],
				"name": "addVoter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ballotOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "finalResult",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "proposals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "name",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "voteCount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "state",
				"outputs": [
					{
						"internalType": "enum Ballot.State",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "stations",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "stationID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pplEnrolled",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "votesCasted",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalVoters",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalVotes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "voterRegister",
				"outputs": [
					{
						"internalType": "bool",
						"name": "enrolled",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "voted",
						"type": "bool"
					},
					{
						"internalType": "int256",
						"name": "indexProposal",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "enrolledPollingStationID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "votedPollingStationID",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addVoter(address,uint256)": {
					"details": "Adds a voter to the voter registry. May only be called by 'owner'.",
					"params": {
						"_pollingStationID": "polling station ID in which voter is registered.",
						"_voterAddress": "address of voter"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ergasia.sol": "Ballot"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ergasia.sol": {
			"keccak256": "0xdc17d1462c5e6a00b3233bd7de04b22d3a03e61ed5cecfcab8744db7cb686084",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://08513783c6aa199627d4925e717e1b13e4fff61c60c78fad8ce7082915cdd843",
				"dweb:/ipfs/QmbTdshpwqxZsHr4jRtQsv8EhcCiVr3GwoURrRuUYA5ktw"
			]
		}
	},
	"version": 1
}