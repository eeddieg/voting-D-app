{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "voted",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_choice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_pollStationID",
						"type": "uint256"
					}
				],
				"name": "VoteCasted",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_voterAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_pollingStationID",
						"type": "uint256"
					}
				],
				"name": "addVoter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "candidates",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "votes",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "candidatesCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_choice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_pollingStationID",
						"type": "uint256"
					}
				],
				"name": "castVote",
				"outputs": [
					{
						"internalType": "bool",
						"name": "voted",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "electionOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "finalResult",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pStationID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_candidateID",
						"type": "uint256"
					}
				],
				"name": "getResultsPerStationPerCandidate",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "votes",
								"type": "uint256"
							}
						],
						"internalType": "struct Election.Candidate",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pollingStationCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "pollingStations",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "votersRegistered",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "votesCasted",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "state",
				"outputs": [
					{
						"internalType": "enum Election.State",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalRegisteredVoters",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "voterRegistry",
				"outputs": [
					{
						"internalType": "bool",
						"name": "isEnrolled",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "hasVoted",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "choice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "enrolledPollingStationID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "votedPollingStationID",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "voters",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addVoter(address,uint256)": {
					"details": "Adds a voter to the voter registry. May only be called by 'owner'.",
					"params": {
						"_pollingStationID": "polling station ID in which voter is registered.",
						"_voterAddress": "address of voter"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ergasia.sol": "Election"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ergasia.sol": {
			"keccak256": "0xb7bcce4bea3b37349106fb8971c1e4d91c640004421411871fede73ae6464a51",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://54ace47b15d9ce6006c7a85d537280f2906e93a85e986049a9a78bd9a6fbb393",
				"dweb:/ipfs/QmNhpguhyns4C8LrrSTXFfZ4kVv5NjjuJBc8cvUeSo5s8S"
			]
		}
	},
	"version": 1
}